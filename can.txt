#include "can.h"  // Eğer CAN kütüphanesi varsa
#include "system_health_monitor.h"  // Uygunsa kullanabilirsin

void Send_CAN_DeviceStatus(void)
{
    uint8_t data[8] = {0};

    // Vin: 0–60V, factor = 0.01 → 16 bit
    uint16_t vin_scaled = (uint16_t)(g_system.vin * 100.0f);
    data[0] = vin_scaled & 0xFF;
    data[1] = (vin_scaled >> 8) & 0xFF;

    // Iin: şimdilik sabit veya 0 (sistem geliştikçe eklenebilir)
    uint16_t iin_scaled = 0;
    data[2] = iin_scaled & 0xFF;
    data[3] = (iin_scaled >> 8) & 0xFF;

    // Vout: 0–30V, factor = 0.01 → 16 bit
    uint16_t vout_scaled = (uint16_t)(g_system.vout * 100.0f);
    data[4] = vout_scaled & 0xFF;
    data[5] = (vout_scaled >> 8) & 0xFF;

    // Iout: 0–25A, factor = 0.1 → 8 bit
    data[6] = (uint8_t)(g_system.iout * 10.0f);

    // Status: Enum → 0:IDLE, 1:RUNNING, 2:ERROR, ...
    data[7] = g_system.overcurrent ? 3 : 1; // 3: OVERCURRENT, 1: RUNNING

    // CAN ID: 0x571 (örnek olarak), DLC = 8
    CAN_TxHeaderTypeDef txHeader;
    txHeader.StdId = 0x571;
    txHeader.IDE = CAN_ID_STD;
    txHeader.RTR = CAN_RTR_DATA;
    txHeader.DLC = 8;

    uint32_t mailbox;
    HAL_CAN_AddTxMessage(&hcan1, &txHeader, data, &mailbox);
}
